consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Account:
    description: celler account (default view)
    example:
      ID: 1
      email: example@gmail.com
      name: 山田　太郎
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
      email:
        description: メールアドレス
        example: example@gmail.com
        type: string
      name:
        description: 名前
        example: 山田　太郎
        type: string
    required:
    - ID
    - name
    - email
    title: 'Mediatype identifier: application/vnd.account+json; view=default'
    type: object
  AccountCollection:
    description: AccountCollection is the media type for an array of Account (default
      view)
    example:
    - ID: 1
      email: example@gmail.com
      name: 山田　太郎
    - ID: 1
      email: example@gmail.com
      name: 山田　太郎
    items:
      $ref: '#/definitions/Account'
    title: 'Mediatype identifier: application/vnd.account+json; type=collection; view=default'
    type: array
  Integertype:
    description: example (default view)
    example:
      ID: 1
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
    required:
    - ID
    title: 'Mediatype identifier: application/vnd.integertype+json; view=default'
    type: object
  Messagetype:
    description: example (default view)
    example:
      message: ok
    properties:
      message:
        description: メッセージ
        example: ok
        type: string
    required:
    - message
    title: 'Mediatype identifier: application/vnd.messagetype+json; view=default'
    type: object
  Usertype:
    description: example (default view)
    example:
      ID: 1
      email: satak47cpc@gmail.com
      name: hoge
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
      email:
        description: メールアドレス
        example: satak47cpc@gmail.com
        type: string
      name:
        description: 名前
        example: hoge
        type: string
    required:
    - ID
    - name
    - email
    title: 'Mediatype identifier: application/vnd.usertype+json; view=default'
    type: object
  UsertypeCollection:
    description: UsertypeCollection is the media type for an array of Usertype (default
      view)
    example:
    - ID: 1
      email: satak47cpc@gmail.com
      name: hoge
    items:
      $ref: '#/definitions/Usertype'
    title: 'Mediatype identifier: application/vnd.usertype+json; type=collection;
      view=default'
    type: array
  Validationtype:
    description: example (default view)
    example:
      ID: 1
      defaultType: でふぉ
      email: example@gmail.com
      enumType: A
      integerType: 5
      reg: 12abc
      stringType: あいうえお
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
      defaultType:
        description: デフォルト値
        example: でふぉ
        type: string
      email:
        description: メールアドレス
        example: example@gmail.com
        type: string
      enumType:
        description: 列挙型
        example: A
        type: string
      integerType:
        description: 数字（1〜10）
        example: 5
        format: int64
        type: integer
      reg:
        description: デフォルト値
        example: 12abc
        type: string
      stringType:
        description: 文字（1~10文字）
        example: あいうえお
        type: string
    required:
    - ID
    - integerType
    - stringType
    - email
    - enumType
    - defaultType
    - reg
    title: 'Mediatype identifier: application/vnd.validationtype+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
externalDocs:
  description: wiki
  url: https://github.com/tikasan/goa-simple-sample/wiki
host: localhost:8080
info:
  contact:
    email: satak47cpc@gmail.com
    name: pei
    url: https://github.com/tikasan/goa-simple-sample/issues
  description: goaのサンプルです
  license:
    name: MIT
    url: https://github.com/tikasan/eventory/blob/master/LICENSE
  title: tikasan/goa-simple-sample
  version: ""
paths:
  /api/v1/accounts:
    get:
      description: 複数
      operationId: accounts#list
      produces:
      - application/vnd.account+json; type=collection
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccountCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: list accounts
      tags:
      - accounts
  /api/v1/accounts/{id}:
    get:
      description: 単数
      operationId: accounts#show
      parameters:
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: show accounts
      tags:
      - accounts
  /api/v1/accounts/users/{ID}:
    get:
      description: 更新
      operationId: accounts#update
      parameters:
      - in: path
        name: ID
        required: true
        type: string
      - default: ""
        description: 名前
        format: email
        in: query
        name: email
        required: false
        type: string
      - default: ""
        description: 名前
        in: query
        name: name
        required: false
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.account+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: update accounts
      tags:
      - accounts
  /api/v1/actions/{ID}:
    get:
      description: 複数アクション（:ID）
      operationId: actions#ID
      parameters:
      - description: ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/vnd.integertype+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Integertype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      - https
      summary: ID actions
      tags:
      - actions
  /api/v1/actions/hello:
    get:
      description: 挨拶する
      operationId: actions#hello
      parameters:
      - default: ""
        description: 名前
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: hello actions
      tags:
      - actions
  /api/v1/actions/ping:
    get:
      description: サーバーとの導通確認
      operationId: actions#ping
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: ping actions
      tags:
      - actions
  /api/v1/method/delete:
    delete:
      description: HTTPメソッド
      operationId: method#method#2
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: method method
      tags:
      - method
  /api/v1/method/get:
    get:
      description: HTTPメソッド
      operationId: method#method
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: method method
      tags:
      - method
  /api/v1/method/list:
    get:
      description: リストを返す
      operationId: method#list
      produces:
      - application/vnd.goa.error
      - application/vnd.usertype+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsertypeCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: list method
      tags:
      - method
  /api/v1/method/list/new:
    get:
      description: リストを返す
      operationId: method#list#1
      produces:
      - application/vnd.goa.error
      - application/vnd.usertype+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsertypeCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: list method
      tags:
      - method
  /api/v1/method/list/topic:
    get:
      description: リストを返す
      operationId: method#list#2
      produces:
      - application/vnd.goa.error
      - application/vnd.usertype+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsertypeCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: list method
      tags:
      - method
  /api/v1/method/post:
    post:
      description: HTTPメソッド
      operationId: method#method#1
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: method method
      tags:
      - method
  /api/v1/method/put:
    put:
      description: HTTPメソッド
      operationId: method#method#3
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: method method
      tags:
      - method
  /api/v1/method/users/{ID}/follow/{type}:
    get:
      description: ちょっと特殊ケース
      operationId: method#etc
      parameters:
      - description: ID
        in: path
        name: ID
        required: true
        type: integer
      - description: タイプ
        enum:
        - 1
        - 2
        - 3
        in: path
        name: type
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      - plain/text
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: etc method
      tags:
      - method
  /api/v1/method/users/follow:
    delete:
      description: フォロー操作
      operationId: method#follow#1
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: follow method
      tags:
      - method
    put:
      description: フォロー操作
      operationId: method#follow
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: follow method
      tags:
      - method
  /api/v1/response/users:
    get:
      description: ユーザー（複数）
      operationId: response#list
      produces:
      - application/vnd.goa.error
      - application/vnd.usertype+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UsertypeCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: list response
      tags:
      - response
  /api/v1/response/users/{id}:
    get:
      description: ユーザー（単数）
      operationId: response#show
      parameters:
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/vnd.usertype+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Usertype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: show response
      tags:
      - response
  /api/v1/response/users/array:
    get:
      description: ユーザー（配列）
      operationId: response#array
      produces:
      - application/vnd.goa.error
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: array response
      tags:
      - response
  /api/v1/response/users/hash:
    get:
      description: ユーザー（ハッシュ）
      operationId: response#hash
      produces:
      - application/vnd.goa.error
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: hash response
      tags:
      - response
  /api/v1/securiy:
    get:
      description: セキュリティの例です
      operationId: security#security
      produces:
      - application/vnd.goa.error
      - application/vnd.messagetype+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Messagetype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      - https
      summary: security security
      tags:
      - security
  /api/v1/validation:
    get:
      description: Validation
      operationId: validation#validation
      parameters:
      - description: ID
        in: query
        name: ID
        required: true
        type: integer
      - default: でふぉ
        description: デフォルト値
        in: query
        name: defaultType
        required: true
        type: string
      - description: メールアドレス
        format: email
        in: query
        name: email
        required: true
        type: string
      - description: 列挙型
        enum:
        - A
        - B
        - C
        in: query
        name: enumType
        required: true
        type: string
      - description: 数字（1〜10）
        in: query
        maximum: 10
        minimum: 0
        name: integerType
        required: true
        type: integer
      - description: 正規表現
        in: query
        name: reg
        pattern: ^[a-z0-9]{5}$
        required: true
        type: string
      - description: 文字（1~10文字）
        in: query
        maxLength: 10
        minLength: 1
        name: stringType
        required: true
        type: string
      produces:
      - application/vnd.validationtype+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Validationtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: validation validation
      tags:
      - validation
  /js/{filepath}:
    get:
      operationId: js#/js/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download /js/
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
      summary: Download swagger/swagger.json
  /swagger/{filepath}:
    get:
      operationId: swagger#/swagger/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download public/swagger/
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NotFound:
    description: Not Found
  Unauthorized:
    description: Unauthorized
schemes:
- http
- https
securityDefinitions:
  userToken:
    description: ユーザートークン
    in: header
    name: X-Authorization
    type: apiKey
swagger: "2.0"
